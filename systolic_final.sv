`line 2 "systolic_final.tlv" 0 //_\TLV_version 1d: tl-x.org, generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro
`line 38 "systolic_final.tlv" 1


   module top(input wire clk, input wire reset, input wire [31:0] cyc_cnt, output wire passed, output wire failed);    /* verilator lint_save */ /* verilator lint_off UNOPTFLAT */  bit [256:0] RW_rand_raw; bit [256+63:0] RW_rand_vect; pseudo_rand #(.WIDTH(257)) pseudo_rand (clk, reset, RW_rand_raw[256:0]); assign RW_rand_vect[256+63:0] = {RW_rand_raw[62:0], RW_rand_raw};  /* verilator lint_restore */  /* verilator lint_off WIDTH */ /* verilator lint_off UNOPTFLAT */
`include "systolic_final_gen.sv" 
   assign L0_reset_a0 = reset;

  
   assign L0_activation_stream_a0[7:0] = RW_rand_vect[(0 + (0)) % 257 +: 8];
   assign L0_weight_stream_a0[7:0] = RW_rand_vect[(124 + (0)) % 257 +: 8];

   
   `line 21 "systolic_final.tlv" 1   
      for (pe = 0; pe <= 4 * 4-1; pe++) begin : L1_Pe logic [7:0] L1_activation_a0; logic L1_col_a0; logic L1_index_a0; logic [31:0] L1_partial_sum_a0; logic L1_row_a0; logic [7:0] L1_PIPE_activation_out_a1; logic [31:0] L1_PIPE_output_a0, L1_PIPE_output_a1; logic [31:0] L1_PIPE_partial_sum_out_a1; //_/pe
         
         assign L1_index_a0 = pe;
         assign L1_row_a0 = L1_index_a0 / 4;
         assign L1_col_a0 = L1_index_a0 % 4;
   
        
         assign L1_activation_a0[7:0] = (L1_col_a0 == 0) ? Pe_activation_stream_a0[pe] : Pe_activation_out_a1[L1_index_a0 - 1];
   
        
         assign Pe_weight_a0[pe][7:0] = (L1_row_a0 == 0) ? Pe_weight_stream_a0[pe] : Pe_weight_a1[L1_index_a0 - 4];
   
         assign L1_partial_sum_a0[31:0] = (L1_row_a0 == 0) ? 0 : Pe_partial_sum_out_a1[L1_index_a0 - 4];
   
        
         `line 12 "systolic_final.tlv" 
            //_|pipe
               //_@0
                  assign L1_PIPE_output_a0[31:0] = Pe_PIPE_reset_a0[pe] ? 0 : $signed(Pe_PIPE_activation_a0[pe][7:0]) * $signed(Pe_PIPE_weight_a0[pe][7:0]) + Pe_PIPE_partial_sum_a1[pe];
               //_@1
                  assign L1_PIPE_activation_out_a1[7:0] = Pe_PIPE_activation_a2[pe]; // Shift activation right to the next PE
                  assign L1_PIPE_partial_sum_out_a1[31:0] = L1_PIPE_output_a1; // Store partial sum to pass downward
         end 
         `line 38 "systolic_final.tlv" 2
 
   `line 50 "systolic_final.tlv" 2

   
//_\SV
   endmodule


`undef BOGUS_USE
